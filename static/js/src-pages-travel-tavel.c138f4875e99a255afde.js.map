{"version":3,"sources":["/Users/brunnolou/Projects/react-morph/docz/src/pages/Travel/Travel.tsx","/Users/brunnolou/Projects/react-morph/docz/src/pages/Travel/tavel.mdx"],"names":["strongerEase","createEaseIn","faces","username","src","spring","presets","noWobble","Travel","_useState","useState","_useState2","Object","slicedToArray","toggle","go","contentPlaceholderMorph","useMorph","zIndex","isReversed","easings","coverMorph","sepFade","useFade","isInitial","titleMorph","leftMorph","rightMorph","facesMorphs","useMorphs","facesFades","map","react_default","a","createElement","className","onClick","assign","style","backgroundImage","_ref","index","key","concat","alt","role","_ref2","layoutProps","MDXLayout","MDXContent","components","props","objectWithoutProperties","index_es","mdxType","id","pages_Travel_Travel","isMDXComponent"],"mappings":"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","file":"static/js/src-pages-travel-tavel.fe41bc26.js","sourcesContent":["import React, { useState } from 'react';\nimport './travel.css';\nimport { useMorph, useMorphs, useFade } from 'react-morph/';\nimport { createEaseIn } from 'react-morph/easings';\nimport presets from 'react-morph/presets';\n\nconst strongerEase = createEaseIn(2);\n\nconst faces = [\n  {\n    username: 'brunnolou',\n    src: 'https://avatars1.githubusercontent.com/u/2729225?s=460&v=4',\n  },\n  {\n    username: 'lucalanca',\n    src: 'https://avatars3.githubusercontent.com/u/389459?s=460&v=4',\n  },\n  {\n    username: 'florianginetta',\n    src: 'https://avatars3.githubusercontent.com/u/30113109?s=460&v=4',\n  },\n  {\n    username: 'lejoe',\n    src: 'https://avatars3.githubusercontent.com/u/1759?s=460&v=4',\n  },\n];\n\nconst spring = presets.noWobble;\n\nconst Travel = () => {\n  const [toggle, go] = useState(false);\n  const contentPlaceholderMorph = useMorph({\n    spring,\n    zIndex: 1,\n    isReversed: !toggle,\n    easings: strongerEase,\n  });\n  const coverMorph = useMorph({ spring, zIndex: 2 });\n  const sepFade = useFade({ spring, isInitial: !toggle, zIndex: 4 });\n  const titleMorph = useMorph({ spring, zIndex: 4 });\n  const leftMorph = useMorph({ spring, zIndex: 4 });\n  const rightMorph = useMorph({ spring, zIndex: 4 });\n  const facesMorphs = useMorphs(faces, { spring, zIndex: 3 });\n  const facesFades = faces.map(() =>\n    useFade({ spring, isInitial: toggle, zIndex: 4 }),\n  );\n\n  return (\n    <div className=\"container\">\n      <button onClick={() => go(!toggle)}>Toggle</button>\n      {!toggle && (\n        <a className=\"card\" onClick={() => go(true)}>\n          <div>\n            <h1 className=\"card-title\" {...titleMorph}>\n              Zurich\n            </h1>\n          </div>\n          <div\n            {...coverMorph({\n              style: { backgroundImage: 'url(\"/public/zurich.jpg\")' },\n            })}\n            className=\"card-image\"\n          />\n\n          <div className=\"card-footer\">\n            <span {...leftMorph}>\n              <small className=\"c-white\">Grossmünster</small>\n            </span>\n            <span {...rightMorph}>\n              <small className=\"c-white\">47.3769° N, 8.5417° E</small>\n            </span>\n          </div>\n        </a>\n      )}\n\n      {!toggle && (\n        <div className=\"card-content\">\n          <div\n            className=\"card-content-placeholder\"\n            {...contentPlaceholderMorph}\n          />\n          <div />\n          <div className=\"p1\">\n            <div {...sepFade}>\n              <p className=\"separator t-left\">\n                Panorama Grossmünster limmat river\n              </p>\n            </div>\n\n            <ul className=\"users\">\n              {faces.map(({ src, username }, index) => (\n                <li className=\"users-item\" key={`card-${username}`}>\n                  <img\n                    className=\"users-image\"\n                    src={src}\n                    alt={username}\n                    {...facesMorphs[index]}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n\n      {toggle && (\n        <div className=\"details\" onClick={() => go(false)}>\n          <div\n            className=\"details-image\"\n            role=\"img\"\n            {...coverMorph({\n              style: { backgroundImage: 'url(\"/public/zurich.jpg\")' },\n            })}\n          />\n\n          <div className=\"details-title\">\n            <div className=\"details-toolbar card-footer\">\n              <small className=\"c-white\" {...leftMorph}>\n                Grossmünster\n              </small>\n              <small className=\"c-white\" {...rightMorph}>\n                47.3769° N, 8.5417° E\n              </small>\n            </div>\n\n            <h1 className=\"card-title title-large\" {...titleMorph}>\n              Zurich\n            </h1>\n          </div>\n\n          <div className=\"details-content\">\n            <div\n              className=\"details-content-placeholder\"\n              {...contentPlaceholderMorph}\n            />\n\n            <ul>\n              {faces.map(({ src, username }, index) => (\n                <li className=\"users-item\" key={`details-${username}`}>\n                  <div className=\"m1\">\n                    <img\n                      className=\"users-image users-image--lg\"\n                      src={src}\n                      alt={username}\n                      {...facesMorphs[index]}\n                    />\n                  </div>\n\n                  <span key={`user-${username}`} {...facesFades[index]}>\n                    {username}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Travel;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { useState } from 'react';\nimport { useMorph } from 'react-morph/';\nimport Travel from './Travel';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"travel-demo\"\n    }}>{`Travel demo`}</h1>\n    <div className=\"body\">\n  <Travel mdxType=\"Travel\" />\n    </div>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}
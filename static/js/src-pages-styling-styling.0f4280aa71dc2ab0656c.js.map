{"version":3,"sources":["/Users/brunnolou/Projects/react-morph/docz/src/pages/styling/styling.js","/Users/brunnolou/Projects/react-morph/docz/src/pages/styling/styling.mdx"],"names":["H1Block","react_default","a","createElement","style","border","H1Inline","display","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","objectWithoutProperties","index_es","assign","mdxType","id","parentName","index_esm","__position","__code","__scope","this","Playground","flexDirection","alignItems","className","isMDXComponent"],"mappings":"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","file":"static/js/src-pages-styling-styling.1f11252b.js","sourcesContent":["import React from 'react';\n\nexport const H1Block = () => (\n  <h1\n    style={{\n      border: '3px dotted red',\n    }}\n  >\n    This is an h1\n  </h1>\n);\n\nexport const H1Inline = () => (\n  <h1\n    style={{\n      border: '3px dotted red',\n\t\t\tdisplay: 'inline-block',\n    }}\n  >\n    This is an h1\n  </h1>\n);\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { H1Block, H1Inline } from './styling';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h1>\n    <p>{`You can style your components with whatever you like.\nYou can use `}<strong parentName=\"p\">{`inline styles`}</strong>{`, `}<strong parentName=\"p\">{`CSS`}</strong>{` class names or a `}<strong parentName=\"p\">{`CSS-in-JS`}</strong>{` solution like Styled Components.`}</p>\n    <h3 {...{\n      \"id\": \"caveats\"\n    }}>{`Caveats`}</h3>\n    <p>{`Since React Morph rely on `}<inlineCode parentName=\"p\">{`getBoundingClientRect`}</inlineCode>{` there's a few things you should know.`}</p>\n    <h2 {...{\n      \"id\": \"whitespace\"\n    }}>{`Whitespace`}</h2>\n    <p>{`You need to remove extra whitespace, to match the real element's width.\nFor example, `}<inlineCode parentName=\"p\">{`block`}</inlineCode>{` elements like an `}<inlineCode parentName=\"p\">{`h1`}</inlineCode>{` don't have intuitive size:`}</p>\n    <Playground __position={0} __code={'() => {\\n  return (\\n    <h1\\n      style={{\\n        border: \\'2px dotted\\',\\n      }}\\n    >\\n      This is an h1\\n    </h1>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      H1Block,\n      H1Inline\n    }} mdxType=\"Playground\">\n  {() => {\n        return <h1 style={{\n          border: '2px dotted'\n        }}>\n        This is an h1\n      </h1>;\n      }}\n    </Playground>\n    <p>{`To solve this we can style it with `}<inlineCode parentName=\"p\">{`display: inline-block`}</inlineCode>{`:`}</p>\n    <Playground __position={1} __code={'() => {\\n  return (\\n    <h1\\n      style={{\\n        border: \\'2px dotted\\',\\n        display: \\'inline-block\\',\\n      }}\\n    >\\n      This is an h1\\n    </h1>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      H1Block,\n      H1Inline\n    }} mdxType=\"Playground\">\n  {() => {\n        return <h1 style={{\n          border: '2px dotted',\n          display: 'inline-block'\n        }}>\n        This is an h1\n      </h1>;\n      }}\n    </Playground>\n    <p>{`Another way is by wrapping with flexbox `}<inlineCode parentName=\"p\">{`display: flex`}</inlineCode>{`:`}</p>\n    <Playground __position={2} __code={'() => {\\n  return (\\n    <div\\n      style={{\\n        display: \\'flex\\',\\n        flexDirection: \\'column\\',\\n        alignItems: \\'start\\',\\n      }}\\n    >\\n      <h1\\n        style={{\\n          border: \\'2px dotted\\',\\n        }}\\n      >\\n        This is an h1\\n      </h1>\\n      <h1\\n        style={{\\n          border: \\'2px dotted\\',\\n        }}\\n      >\\n        This is another one\\n      </h1>\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      H1Block,\n      H1Inline\n    }} mdxType=\"Playground\">\n  {() => {\n        return <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'start'\n        }}>\n        <h1 style={{\n            border: '2px dotted'\n          }}>\n          This is an h1\n        </h1>\n        <h1 style={{\n            border: '2px dotted'\n          }}>\n          This is another one\n        </h1>\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"margins\"\n    }}>{`Margins`}</h2>\n    <p>{`Margins also create extra white space.\nYou can wrap the element and add the margin to it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Don't\n<div className=\"margin-bottom\" {...morph}>\n  …\n</div>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Do\n<div className=\"margin-bottom\">\n  <div {...morph}>…</div>\n</div>\n`}</code></pre>\n    <p>{`Or you can make sure to `}<strong parentName=\"p\">{`match the margins in both states`}</strong>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Do\n{\n  toggle ? (\n    <div className=\"margin-bottom first\" {...morph} />\n  ) : (\n    <div className=\"margin-bottom last\" {...morph} />\n  );\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"other\"\n    }}>{`Other`}</h3>\n    <p>{`List items could be miscalculated; a simple solution is: `}<inlineCode parentName=\"p\">{`list-style: none;`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}